/******************************************************************************
* Copyright (c) 2000-2019 Ericsson Telecom AB
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v2.0
* which accompanies this distribution, and is available at
* https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
*
* Contributors:
* Eduard Czimbalmos
* Attila Balasko
* Csaba Feher
* Gabor Szalai
* Kulcsár Endre
******************************************************************************/
//
//  File:               SunRPC_Demo.cc
//  Description:        SunRPC test port demo
//  Rev:                R5B
//  Prodnr:             CNL 113 493
//
module SunRPC_Demo {

import from SunRPCasp_PortType all;
import from SunRPCasp_Types all;
import from TCPasp_Types all;
import from TCPasp_PortType all;

type component RPC_test {
};

type component RPC_client {
  port SunRPCasp_PT rpc_client_port;
};

type component TCP_client {
  port TCPasp_PT tcp_client_port;
};

type component RPC_server {
  port SunRPCasp_PT rpc_server_port;
};

type record of octetstring OCTETSTRINGS;

testcase tc_both_client_server() runs on RPC_test
{
  var RPC_client rpc_client_PTC;
  var RPC_server rpc_server_PTC;

  rpc_client_PTC := RPC_client.create;
  rpc_server_PTC := RPC_server.create;

  rpc_server_PTC.start(rpc_server());
  timer T_wait := 0.2; T_wait.start; T_wait.timeout;
  rpc_client_PTC.start(rpc_client());

  rpc_client_PTC.done;
  rpc_server_PTC.done;
}

testcase tc_TCP_client_RPC_server_RPC_decode_test() runs on RPC_test
{
  var TCP_client tcp_client_PTC;
  var RPC_server rpc_server_PTC;

  tcp_client_PTC := TCP_client.create;
  rpc_server_PTC := RPC_server.create;

  rpc_server_PTC.start(rpc_server());
  timer T_wait := 0.2; T_wait.start; T_wait.timeout;
  tcp_client_PTC.start(tcp_client());

  tcp_client_PTC.done;
  rpc_server_PTC.done;
}

function tcp_client() runs on TCP_client {
  var OCTETSTRINGS test_msgs := {
// RPC Call
        /*'8000008cdee336f60000000000000002000186a30000000300000010000000010000002c4408159f000000076865696e74656c000000efd9000039d00000000400001a44000039e2000039d00000000a000000000000000000000020400a0001ffffffff000a0000000c391300000003000a00000000960d000000020000000000000000000000000000000000000418'O,
// RPC REPLY    
    '80000418dee336f60000000100000000000000000000000000000000000000000000000100000002000001ed000000270000efd900001a4400000000000020000000000000002000000000000000000000000000400a000100000000000c39134408159f1b05adc84408159a235d8ef04408159a235d8ef000000000000000000000000100000000000c3913000000012e000000000000000000000100000001000000000000960d000000022e2e000000000000000002040000000100000000000c392e000000062e6c6f67696e000000000000000002140000000100000000000c392f000000026c68000000000000000002200000000100000000000c39300000000a2e494341436c69656e74000000000000000002340000000100000000000c3933000000092e526174696f6e616c00000000000000000002480000000100000000000c3936000000082e6163726f626174000000000000025c0000000100000000000c3938000000062e61646f62650000000000000000026c0000000100000000000c3939000000092e617073746f6f6c7300000000000000000002800000000100000000000c393c000000062e6365646974000000000000000002900000000100000000000c393e000000032e64740000000000000002a00000000100000000000c3968000000032e666d0000000000000002b00000000100000000000c3971000000062e6672616d65000000000000000002c00000000100000000000c3973000000032e68680000000000000002d00000000100000000000c3975000000052e696e736f00000000000000000002e00000000100000000000cf32b000000052e6a61766100000000000000000002f00000000100000000000c397b0000000a2e6a70695f6361636865000000000000000003040000000100000000000c3984000000042e6b646500000000000003140000000100000000000c398c000000032e6d630000000000000003240000000100000000000c398e0000000a2e6d6963726f736f6674000000000000000003380000000100000000000c26ea000000082e6d6f7a696c6c61000000000000034c0000000100000000000ca962000000092e6b6579737461746500000000000000000003600000000100000000000c410a000000082e6e657473686f7700000000000003740000000100000000000c410b000000062e6f70657261000000000000000003840000000100000000000c410f000000032e71740000000000000003940000000100000000000c40f2000000092e736f6c726567697300000000000000000003a80000000100000000000c4111000000042e73736800000000000003b80000000100000000000c4112000000092e776d706c6179657200000000000000000003cc0000000100000000000c4113000000042e79657300000000000003dc0000000000000000'O,
// RPC Call in two fragments, second fragment is emtpy
    '0000008cdee336f60000000000000002000186a30000000300000010000000010000002c4408159f000000076865696e74656c000000efd9000039d00000000400001a44000039e2000039d00000000a000000000000000000000020400a0001ffffffff000a0000000c391300000003000a00000000960d00000002000000000000000000000000000000000000041880000000'O,
// RPC Call in two fragments, second fragment is not empty
    '0000008adee336f60000000000000002000186a30000000300000010000000010000002c4408159f000000076865696e74656c000000efd9000039d00000000400001a44000039e2000039d00000000a000000000000000000000020400a0001ffffffff000a0000000c391300000003000a00000000960d00000002000000000000000000000000000000000000800000020418'O,
// RPC REPLY, 3 fragments in 3 TCP packet
    '00000114dee336f60000000100000000000000000000000000000000000000000000000100000002000001ed000000270000efd900001a4400000000000020000000000000002000000000000000000000000000400a000100000000000c39134408159f1b05adc84408159a235d8ef04408159a235d8ef000000000000000000000000100000000000c3913000000012e000000000000000000000100000001000000000000960d000000022e2e000000000000000002040000000100000000000c392e000000062e6c6f67696e000000000000000002140000000100000000000c392f000000026c68000000000000000002200000000100000000000c39300000000a2e494341436c69656e7400000000000000000234'O,
    '0000019b0000000100000000000c3933000000092e526174696f6e616c00000000000000000002480000000100000000000c3936000000082e6163726f626174000000000000025c0000000100000000000c3938000000062e61646f62650000000000000000026c0000000100000000000c3939000000092e617073746f6f6c7300000000000000000002800000000100000000000c393c000000062e6365646974000000000000000002900000000100000000000c393e000000032e64740000000000000002a00000000100000000000c3968000000032e666d0000000000000002b00000000100000000000c3971000000062e6672616d65000000000000000002c00000000100000000000c3973000000032e68680000000000000002d00000000100000000000c3975000000052e696e736f00000000000000000002e00000000100000000000cf32b000000052e6a61766100000000000000000002f00000000100000000000c397b0000000a2e6a70695f6361636865000000000000000003040000000100000000000c3984000000042e6b646500000000000003'O,
    '80000169140000000100000000000c398c000000032e6d630000000000000003240000000100000000000c398e0000000a2e6d6963726f736f6674000000000000000003380000000100000000000c26ea000000082e6d6f7a696c6c61000000000000034c0000000100000000000ca962000000092e6b6579737461746500000000000000000003600000000100000000000c410a000000082e6e657473686f7700000000000003740000000100000000000c410b000000062e6f70657261000000000000000003840000000100000000000c410f000000032e71740000000000000003940000000100000000000c40f2000000092e736f6c726567697300000000000000000003a80000000100000000000c4111000000042e73736800000000000003b80000000100000000000c4112000000092e776d706c6179657200000000000000000003cc0000000100000000000c4113000000042e79657300000000000003dc0000000000000000'O,*/
    // RPC CALL, 1 fragment in 2 TCP packet
    '80000820463ba799000000000000000220000200000000010000000100000000000000000000000000000000000000010000000a76657273696f6e3d323000000000000100000015435553545f54454c5f4e4f3d34353531303230303000000000000001000000146f726967696e5f6e6f64655f747970653d49565200000001000000156f726967696e5f6e6f64655f69643d77733134393400000000000001000000237472616e73616374696f6e5f69643d383030353534393935323737343931313832363400000000010000002f7472616e73616374696f6e5f646174655f74696d653d323030372d30352d30345431333a33353a31302b30323a30300000000001000000176f726967696e5f6f70657261746f725f69643d6e7573610000000001000000106f7065726174696f6e3d555044415445000000010000000a63757272656e63793d31000000000001000000176465646963617465645f6163636f756e745f69643d31300000000001000000166465646963617465645f616d6f756e743d3130323030000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d323400000001000000166465646963617465645f6163636f756e745f69643d39000000000001000000156465646963617465645f616d6f756e743d3931383000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d323200000001000000166465646963617465645f6163636f756e745f69643d38000000000001000000156465646963617465645f616d6f756e743d3831363000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d323000000001000000166465646963617465645f6163636f756e745f69643d37000000000001000000156465646963617465645f616d6f756e743d3731343000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d313800000001000000166465646963617465645f6163636f756e745f69643d36000000000001000000156465646963617465645f616d6f756e743d3631323000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d313600000001000000166465646963617465645f6163636f756e745f69643d35000000000001000000156465646963617465645f616d6f756e743d3531303000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d313400000001000000166465646963617465645f6163636f756e745f69643d34000000000001000000156465646963617465645f616d6f756e743d3430383000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d313200000001000000166465646963617465645f6163636f756e745f69643d33000000000001000000156465646963617465645f616d6f756e743d33303630000000'O,
    '00000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d313000000001000000166465646963617465645f6163636f756e745f69643d32000000000001000000156465646963617465645f616d6f756e743d3230343000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d303800000001000000166465646963617465645f6163636f756e745f69643d31000000000001000000156465646963617465645f616d6f756e743d3130323000000000000001000000246465646963617465645f6578706972795f646174655f6f6c643d323030372d30352d303400000001000000246465646963617465645f6578706972795f646174655f6e65773d323030372d30352d30360000000100000019616374696f6e5f6465645f6163635f616d6f756e743d4144440000000000000100000013736572766963655f636c6173735f6f6c643d330000000001000000206372656469745f636c656172616e63655f67726163655f706572696f643d3135000000010000001c736572765f72656d6f76616c5f67726163655f706572696f643d3230000000010000001b616374696f6e5f726566696c6c5f62617272696e673d434c454152000000000100000017726566696c6c5f756e6261725f646174655f74696d653d00000000010000000a726561736f6e3d313238000000000000'O
  }

  map(self:tcp_client_port, system:tpp_client_port);
  var ASP_TCP_Connect v_connect := {hostname := "localhost", portnumber := 3344, local_hostname := omit, local_portnumber := omit};
  tcp_client_port.send(v_connect);
  tcp_client_port.send(v_connect);
  
  template ASP_TCP_Connect_result t_connect_result := {client_id := ?};
  var ASP_TCP_Connect_result vl_connect_result;
  timer T_guard := 2.0;
  T_guard.start;
  var integer vl_clients := 0;
  alt
  {
    [] tcp_client_port.receive(t_connect_result) -> value vl_connect_result {
        T_guard.stop;
        vl_clients := vl_clients + 1;
        if(vl_clients < 2)
        {
          repeat;
        }
      }
    [] T_guard.timeout {
        setverdict(fail);
        return;
      }
  }

  template ASP_TCP t_ASP_TCP := ?;
  var ASP_TCP v_ASP_TCP;
  var ASP_TCP v_ASP_TCP_reply;
  v_ASP_TCP.client_id := vl_connect_result.client_id;

  timer T_wait := 0.2; 
  var integer i;
  for(i := 0; i < sizeof(test_msgs); i := i + 1)
  {
    T_wait.start; T_wait.timeout;
    v_ASP_TCP.data := test_msgs[i];
    tcp_client_port.send(v_ASP_TCP);
  }

  var octetstring received_reply := ''O;
  T_guard.start(0.5);
  alt {
    [] tcp_client_port.receive(t_ASP_TCP) -> value v_ASP_TCP_reply {
        received_reply := received_reply & v_ASP_TCP_reply.data;
        repeat;
        /*else {
          log("REPLIED DATA MATCHES THE SENT");
          repeat;
        }*/
      }
    [] T_guard.timeout {
      }
  };
  if(received_reply
  {
    log("Received replies match the expected data.");
    setverdict(pass);
  }
  else
  {
    log("!!! Received replies does not match the expected data.!!!");
    setverdict(fail);
  }
  
  unmap(self:tcp_client_port, system:tcp_client_port);
}


function rpc_client() runs on RPC_client {
  var SunRPC_message test_msg := {
    xid := 'DEE336F6'O,
      msg_type := rpc_call,
      body := {
      cbody := {
        rpcvers := 2,
          prog := 100003,
          vers := 3,
          proc := 16,
          cred := {
          flavor := auth_unix,
            body := {
            len := 44,
              data := '4408159F000000076865696E74656C000000EFD9000039D00000000400001A44000039E2000039D00000000A'O
          }
        },
        verf := {
          flavor := auth_null,
            body := {
            len := 0,
              data := ''O
          }
        },
        proc_spec_parameters := '00000020400A0001FFFFFFFF000A0000000C391300000003000A00000000960D000000020000000000000000000000000000000000000418'O
      }
    }
  }

  map(self:rpc_client_port, system:rpc_client_port);
  var ASP_SunRPC_Connect v_connect := {hostname := "localhost", portnumber := 3344, local_hostname := omit, local_portnumber := omit};
  rpc_client_port.send(v_connect);
  template ASP_SunRPC_Connect_result t_connect_result := {client_id := ?};
  rpc_client_port.receive(t_connect_result);

  template SunRPC_message t_SunRPC_message := ?;
  var SunRPC_message v_rpc_message;

  timer T_guard := 2.0;
  T_guard.start;

  rpc_client_port.send(test_msg);
  var integer i := 0;

  alt {
    [] rpc_client_port.receive(t_SunRPC_message) -> value v_rpc_message {
        rpc_client_port.send(v_rpc_message);
        i := i + 1;
        if(i < 10) {
          repeat;
        }
      }
    [] T_guard.timeout {
        setverdict(fail);
      }
  };

  setverdict(pass);
  unmap(self:rpc_client_port, system:rpc_client_port);
}

function rpc_server() runs on RPC_server {
  map(self:rpc_server_port, system:rpc_server_port);
  var ASP_SunRPC_Listen v_listen := {portnumber := 3344, local_hostname := omit};
  rpc_server_port.send(v_listen);
  template ASP_SunRPC_Listen_result t_listen_result := {portnumber := ?};
  rpc_server_port.receive(t_listen_result);
  template ASP_SunRPC_Connected t_connected := {hostname := ?, portnumber := ?, client_id := ?};
  template ASP_SunRPC_Close t_close := {client_id := ?};

  timer T_guard := 2.0;
  T_guard.start;
  timer T_wait := 0.1;
  template SunRPC_message t_SunRPC_message := ?;
  template SunRPC_message_multiple_client t_SunRPC_message_multiple_client := ?;
  var SunRPC_message v_rpc_message;
  var SunRPC_message_multiple_client v_rpc_message_multiple_client;

  alt {
    [] rpc_server_port.receive(t_SunRPC_message) -> value v_rpc_message {
        rpc_server_port.send(v_rpc_message);
        repeat;
      }
    [] rpc_server_port.receive(t_SunRPC_message_multiple_client) -> value v_rpc_message_multiple_client {
        rpc_server_port.send(v_rpc_message_multiple_client);
        repeat;
      }
    [] rpc_server_port.receive(t_connected) {
        repeat;
      }
    [] rpc_server_port.receive(t_close)
      {
        setverdict(pass);
      }
    [] T_guard.timeout {
        setverdict(fail);
      }
  };

  unmap(self:rpc_server_port, system:rpc_server_port);
}

}
